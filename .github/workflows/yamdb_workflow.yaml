name: YaMDb_workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
      - name: Lint with flake8
        run: flake8 --extend-exclude=tests/

      - name: Test with pytest
        run: pytest
    
  push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Push web service to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/yamdb_final_web
          tag_with_ref: true

      - name: Push nginx service to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: nginx/
          repository: ${{ secrets.DOCKER_USERNAME }}/yamdb_final_nginx
          tag_with_ref: true

  deploy:
    runs-on: ubuntu-latest
    needs: push_to_docker_hub
    steps:
      - uses: actions/checkout@master
      - name: copy initial file via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: ./docker-compose.yaml
          target: ${{ github.repository }}

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ github.repository }}
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/yamdb_final_web
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/yamdb_final_nginx
            sudo docker-compose up -d
            sudo docker-compose exec web python manage.py migrate
            sudo docker container prune

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен! 
